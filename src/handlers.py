from aiogram import Router
from aiogram.types import Message
from aiogram_dialog import Dialog, Window, DialogManager, StartMode
from aiogram_dialog.widgets.text import Format
from aiogram_dialog.widgets.input import MessageInput
from aiogram.fsm.state import StatesGroup, State
from src.config import settings
from aiogram.filters.state import State, StatesGroup
from aiogram.types import Message

from aiogram_dialog import (
    Dialog,
    DialogManager,
    StartMode,
    Window,
)
from aiogram_dialog.widgets.text import Const
from main import bot

router = Router()


class BookingSG(StatesGroup):
    first_booking = State()
    waiting_for_booking = State()


async def send_to_admin(chat_id: int, message: str):
    await bot.send_message(chat_id, message, parse_mode="Markdown")


async def first_booking(
    message: Message, message_input: MessageInput, dialog_manager: DialogManager
):
    user_name = message.from_user.username or "–≥–æ—Å—Ç—å"
    booking_details = message.text
    info_message = (
        f"üçΩÔ∏è *–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∞* üçΩÔ∏è\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user_name}\n"
        f"–î–µ—Ç–∞–ª–∏: {booking_details}"
    )
    await send_to_admin(settings.ADMIN_GROUP, info_message)

    await dialog_manager.switch_to(BookingSG.waiting_for_booking)


async def process_booking(
    message: Message, message_input: MessageInput, dialog_manager: DialogManager
):

    user_name = message.from_user.username or "–≥–æ—Å—Ç—å"
    booking_details = message.text
    info_message = (
        f"üçΩÔ∏è *–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∞* üçΩÔ∏è\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user_name}\n"
        f"–î–µ—Ç–∞–ª–∏: {booking_details}"
    )
    await send_to_admin(settings.ADMIN_GROUP, info_message)

    await dialog_manager.switch_to(BookingSG.waiting_for_booking)


dialog = Dialog(
    Window(
        Format(
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ,{event.from_user.first_name}!\n"
            "–î–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–∞, —Å–æ–æ–±—â–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏, "
            "–∂–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É –ø–æ—Å–µ—â–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π."
        ),
        MessageInput(first_booking),
        state=BookingSG.first_booking,
    ),
    Window(
        Const(
            "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏.\n\n"
            "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ –µ—â–µ —Ä–∞–∑ –Ω–∞ –¥—Ä—É–≥—É—é –¥–∞—Ç—É ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫."
        ),
        MessageInput(process_booking),
        state=BookingSG.waiting_for_booking,
    ),
)


async def start(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(
        BookingSG.first_booking,
        mode=StartMode.RESET_STACK,
    )
